
*Task 0:

 - Time Complexity - O(1)
 - This algorithm takes constant time beacause running of algorithm does not depends on input size.


*Task 1:

 - Time Complexity - O(n)
 - This algorithm is linear time because it has two separate for-loops  and a set function.


*Task 2:

 - Time Complexity - O(n)
 - This algorithm is linear time because it has two for-loop and a max function.

  
*Task 3:

 - Time Complexity - O(nlog(n))
 - This algorithm is having for-loops and set function of O(n) and sort function of O(nlog(n))
   so, [O(nlog(n)) + O(n)] = O(nlog(n))

   
*Task 4:

 - Time Complexity - O(nlog(n))
 - This algorithm is having for-loops and set function of O(n) and sort function of O(nlog(n))
   so, [O(nlog(n)) + O(n)] = O(nlog(n))
   